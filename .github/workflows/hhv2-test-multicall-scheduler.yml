name: HH Multicall Autorenew Testnet

concurrency:
  group: ${{ github.workflow }} # one live run of this workflow at a time
  cancel-in-progress: true # newer run wins

on:
  schedule:
    # Runs at the start of every hour
    - cron: "11 2/14 * * *"

  # Allows us to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  call-function:
    runs-on: ubuntu-latest # small, quick-to-start runner

    steps:
      - name: Check out repository (with full history & write access)
        uses: actions/checkout@v3
        with:
          # Fetch everything, not just one commit (needed for pushes)
          fetch-depth: 0
          # Persist the GITHUB_TOKEN into .git/config so that git push works
          persist-credentials: true

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: npm # built-in ~/.npm cache

      - name: Install dependencies
        run: |
          npm install ethers @evmlord/multicall-sdk tsx

      - name: Call smart contract function (and regenerate cache)
        env:
          HH_PRIVATE_KEY: ${{ secrets.HH_KEY }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.HHLOGS_TG_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.HHLOGS_TG_CHATID }}
        run: npx tsx HHV2/multicall.ts

        # — now commit+push the updated cache file —
      - name: Configure Git for Actions
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create or reset cache branch
        run: |
          git fetch origin main
          # use the same branch name each run
          git checkout -B cache/update-wallets-cache origin/main

      - name: Stage & commit cache changes
        run: |
          # only commit if the cache file actually changed
          if git diff --quiet HEAD HHV2/wallets-cache.json; then
            echo "No cache changes, skipping commit."
          else
            git add HHV2/wallets-cache.json
            git commit -m "chore: update wallets-cache.json [ci skip]"
            git push --set-upstream origin cache/update-wallets-cache --force
          fi

      - name: Open (or update) Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const BRANCH = "cache/update-wallets-cache";
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${BRANCH}`,
              state: "open",
            });
            if (prs.length === 0) {
              const pr = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: "chore: update wallets-cache.json [ci skip]",
                head: BRANCH,
                base: "main",
                body: "This PR was auto-generated by the HH Multicall Autorenew workflow.",
              });
              console.log("Opened PR:", pr.data.html_url);
            } else {
              console.log("PR already open:", prs[0].html_url);
            }
