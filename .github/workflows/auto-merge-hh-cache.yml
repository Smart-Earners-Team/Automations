name: Auto-merge cache PR

# Only on PRs against main
on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
    # Only trigger when this file is touched
    paths:
      - "HHV2/wallets-cache.json"

  # Allows us to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Fetch changed files and conditionally merge
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;

            // Fetch all files modified in this PR
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });

            const filenames = files.map(f => f.filename);
            console.log("Changed files:", filenames);

            // Only auto-merge if exactly wallets-cache.json changed
            if (filenames.length !== 1 || filenames[0] !== 'HHV2/wallets-cache.json') {
              console.log("❌ skipping: more than just wallets-cache.json changed.");
              return;
            }

            // Re-fetch PR to check mergeable state
            const { data: fresh } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });

            if (!fresh.mergeable) {
                console.log(`❌ PR not mergeable (mergeable=${fresh.mergeable}).`);
                return;
            }

            // 4) Merge it
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              merge_method: 'squash'
            });
            console.log(`✅ Auto-merged PR #${prNumber}`);
